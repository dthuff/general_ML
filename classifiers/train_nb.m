function [ cv_X, cv_Y, cv_T, cv_AUC ] = train_nb( features, labels, cv_folds, positive_class )
%Trains a Naive Bayes model on data features with classes labels.

% Inputs
%   features - N x F features matrix.  Each row is an observation, each
%   column is a feature
%   labels - N x 1 labels matrix.  Class labels for each observation
%   cv_folds - an int.  number of cross validation folds
%   positive_class - type must match labels.  Identifies the positive label
%   class for computing ROC metrics.
% 
% Outputs
%   cv_X, cv_Y - coordinates of cv-averaged ROC curve with pointwise
%   uncertainties
%   cv_T - score thresholds corresponding to each pt on ROC curve
%   cv_AUC - cv-averaged Area Under the ROC Curve, with lower and upper bounds
%%
    % set up cv partitions
    cv = cvpartition(length(features),'KFold',cv_folds);

    cv_label_dict = cell(cv_folds, 1);
    cv_score_dict = cell(cv_folds, 1);

    % for each cv fold
    for i=1:cv_folds
        
        % divide data into training, testing sets
        train_ind = find(training(cv, i) > 0);
        test_ind = find(training(cv, i) == 0);

        features_train = features(train_ind, :);
        features_test = features(test_ind, :);

        labels_train = labels(train_ind);
        labels_test = labels(test_ind);

        % create and train the SVM
        Mdl = fitcnb(features_train, labels_train,...
            'OptimizeHyperparameters','auto',...
            'HyperparameterOptimizationOptions',...
            struct('AcquisitionFunctionName','expected-improvement-plus'));

        % use trained SVM to produce test set predictions
        [~, predicted_test_scores] = predict(Mdl, features_test);

        %store test labels, predictions
        cv_label_dict{i} = labels_test;
        cv_score_dict{i} = predicted_test_scores(:,2);
        
        %close plots generated by OptimizeHyperParamters
        close all; 
    end

    % perform cv-fold averaging of test set predictions
    [ cv_X, cv_Y, cv_T, cv_AUC ] = perfcurve(cv_label_dict, cv_score_dict, positive_class);

end


